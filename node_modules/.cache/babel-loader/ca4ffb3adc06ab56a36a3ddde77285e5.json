{"ast":null,"code":"var _jsxFileName = \"/Users/Aleks/Documents/web-development/React-projects/salad-bar/src/ViewIngredient.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewIngredient(props) {\n  _s();\n\n  const inventory = props.inventory;\n  const urlName = useParams().name;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: useParams().name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), Object.keys(inventory[urlName]).map(name => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: name + \": \" + inventory[urlName][name]\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewIngredient, \"quY5BP83aKRuZmljviLLsJ0VvEw=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = ViewIngredient;\nexport default ViewIngredient;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewIngredient\");","map":{"version":3,"sources":["/Users/Aleks/Documents/web-development/React-projects/salad-bar/src/ViewIngredient.js"],"names":["useParams","ViewIngredient","props","inventory","urlName","name","Object","keys","map"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACA,QAAMC,OAAO,GAAGJ,SAAS,GAAGK,IAA5B;AACA,sBACE;AAAA,4BACE;AAAA,gBAAKL,SAAS,GAAGK;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,MAAM,CAACC,IAAP,CAAYJ,SAAS,CAACC,OAAD,CAArB,EAAgCI,GAAhC,CAAqCH,IAAD,iBACnC;AAAA,gBAAiBA,IAAI,GAAG,IAAP,GAAcF,SAAS,CAACC,OAAD,CAAT,CAAmBC,IAAnB;AAA/B,OAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAXQJ,c;UAESD,S,EAGPA,S;;;KALFC,c;AAaT,eAAeA,cAAf","sourcesContent":["import { useParams } from \"react-router-dom\";\n\nfunction ViewIngredient(props) {\n  const inventory = props.inventory;\n  const urlName = useParams().name;\n  return (\n    <div>\n      <h2>{useParams().name}</h2>\n      {Object.keys(inventory[urlName]).map((name) => (\n        <div key={name}>{name + \": \" + inventory[urlName][name]}</div>\n      ))}\n    </div>\n  );\n}\n\nexport default ViewIngredient;\n"]},"metadata":{},"sourceType":"module"}