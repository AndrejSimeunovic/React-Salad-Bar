{"ast":null,"code":"var _jsxFileName = \"/Users/Aleks/Documents/EDAF90/webprog-master/labs/lab3/src/ComposeSalad.js\";\nimport { Component } from 'react';\nimport SaladSelect from './SaladSelect';\nimport inventory from './inventory.ES6';\nimport CheckBox from './CheckBox';\nimport Salad from './Salad';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ComposeSalad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foundation: '',\n      protein: '',\n      extra: {},\n      dressing: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExtra = this.handleExtra.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    event.target.parentElement.classList.add(\"was-validated\");\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleExtra(event) {\n    // let copyState = { ...this.state[event.target.value] };\n    // copyState[event.target.name] = event.target.checked;\n    // this.setState({ [event.target.value]: copyState });\n    this.setState(prevState => ({\n      extra: { ...prevState.extra,\n        [event.target.name]: event.target.checked\n      }\n    }));\n  }\n\n  createSalad() {\n    let salad = new Salad();\n    salad.add(this.state.foundation, this.props.inventory[this.state.foundation]);\n    salad.add(this.state.protein, this.props.inventory[this.state.protein]);\n    Object.keys(this.state.extra).forEach(name => salad.add(name, inventory[name]));\n    salad.add(this.state.dressing, this.props.inventory[this.state.dressing]); //console.log(JSON.stringify(salad));\n\n    return salad;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    event.target.classList.add(\"was-validated\"); // let salad = new Salad();\n    // salad.add(this.state.foundation,inventory[this.state.foundation])\n    // salad.add(this.state.protein,inventory[this.state.protein])\n    // Object.keys(this.state.extra).forEach(name => (this.state.extra[name] ? salad.add(name,inventory[name]): salad.remove(name)));\n    // salad.add(this.state.dressing,inventory[this.state.dressing]);\n    // console.log(JSON.stringify(salad));\n\n    if (event.target.checkValidity() === false) {//console.log(\"ERROR!!!\");\n      //event.preventDefault();\n    } else {\n      this.props.addToShoppingcart(this.createSalad());\n      this.setState({\n        foundation: '',\n        protein: '',\n        extra: {},\n        dressing: ''\n      });\n      this.props.navigate(\"/view-order\"); //console.log(\"NOT ERROR!!!\");\n    } //Stack\n    // document.getElementById('foundation').reset();\n    // document.getElementById('protein').reset();\n    // document.getElementById('extra').reset();\n    // document.getElementById('dressing').reset();\n\n  }\n\n  render() {\n    //let extras = Object.keys(this.props.inventory).filter(name => this.props.inventory[name].extra);\n    //let foundationList = Object.keys(inventory).filter(x => inventory[x].foundation);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"continer col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row h-200 p-5 bg-light border rounded-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"V\\xE4lj inneh\\xE5llet i din sallad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"foundation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SaladSelect, {\n            property: 'foundation',\n            handleSelect: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SaladSelect, {\n            property: 'protein',\n            handleSelect: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"extra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n            property: 'extra',\n            list: this.state.extra,\n            handleSelect: this.handleExtra\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"dressing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SaladSelect, {\n            property: 'dressing',\n            handleSelect: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary mb-3\",\n            children: \"Best\\xE4ll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ComposeSalad;\n{\n  /* <select>\n  {Object.keys(inventory).filter(x => inventory[x].foundation).map(x => \n  <option key={x}>{x + ', ' + inventory[x].price + ' kr'}</option>)}\n  </select> */\n}","map":{"version":3,"sources":["/Users/Aleks/Documents/EDAF90/webprog-master/labs/lab3/src/ComposeSalad.js"],"names":["Component","SaladSelect","inventory","CheckBox","Salad","ComposeSalad","constructor","props","state","foundation","protein","extra","dressing","handleChange","bind","handleExtra","handleSubmit","event","target","parentElement","classList","add","setState","name","value","prevState","checked","createSalad","salad","Object","keys","forEach","preventDefault","checkValidity","addToShoppingcart","navigate","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport SaladSelect from './SaladSelect';\nimport inventory from './inventory.ES6';\nimport CheckBox from './CheckBox';\nimport Salad from './Salad';\n\nclass ComposeSalad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { foundation: '', protein: '', extra: {}, dressing: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExtra = this.handleExtra.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    event.target.parentElement.classList.add(\"was-validated\");\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handleExtra(event) {\n    // let copyState = { ...this.state[event.target.value] };\n    // copyState[event.target.name] = event.target.checked;\n    // this.setState({ [event.target.value]: copyState });\n    this.setState(prevState => (\n      { extra: { ...prevState.extra, [event.target.name]: event.target.checked } }\n    ));\n  }\n\n  createSalad() {\n    let salad = new Salad();\n    salad.add(this.state.foundation, this.props.inventory[this.state.foundation])\n    salad.add(this.state.protein, this.props.inventory[this.state.protein])\n    Object.keys(this.state.extra).forEach(name => salad.add(name, inventory[name]));\n    salad.add(this.state.dressing, this.props.inventory[this.state.dressing]);\n    //console.log(JSON.stringify(salad));\n    return salad;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    event.target.classList.add(\"was-validated\");\n    // let salad = new Salad();\n    // salad.add(this.state.foundation,inventory[this.state.foundation])\n    // salad.add(this.state.protein,inventory[this.state.protein])\n    // Object.keys(this.state.extra).forEach(name => (this.state.extra[name] ? salad.add(name,inventory[name]): salad.remove(name)));\n    // salad.add(this.state.dressing,inventory[this.state.dressing]);\n    // console.log(JSON.stringify(salad));\n    if (event.target.checkValidity() === false) {\n      //console.log(\"ERROR!!!\");\n      //event.preventDefault();\n    } else {\n      this.props.addToShoppingcart(this.createSalad());\n      this.setState({ foundation: '', protein: '', extra: {}, dressing: '' });\n      this.props.navigate(\"/view-order\");\n      //console.log(\"NOT ERROR!!!\");\n    }\n\n\n\n\n    //Stack\n    // document.getElementById('foundation').reset();\n    // document.getElementById('protein').reset();\n    // document.getElementById('extra').reset();\n    // document.getElementById('dressing').reset();\n  }\n\n  render() {\n    //let extras = Object.keys(this.props.inventory).filter(name => this.props.inventory[name].extra);\n    //let foundationList = Object.keys(inventory).filter(x => inventory[x].foundation);\n    return (\n      <div className=\"continer col-12\">\n        <div className=\"row h-200 p-5 bg-light border rounded-3\">\n\n          <form onSubmit={this.handleSubmit} noValidate >\n\n            <h2>Välj innehållet i din sallad</h2>\n            <h1>foundation</h1>\n\n            <SaladSelect property={'foundation'} handleSelect={this.handleChange} />\n\n            <h1>protein</h1>\n\n            <SaladSelect property={'protein'} handleSelect={this.handleChange} />\n\n            <h1>extra</h1>\n\n            <CheckBox property={'extra'} list={this.state.extra} handleSelect={this.handleExtra} />\n\n            <h1>dressing</h1>\n\n            <SaladSelect property={'dressing'} handleSelect={this.handleChange} />\n            <p></p>\n            <button type=\"submit\" className=\"btn btn-primary mb-3\">Beställ</button>\n\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n}\nexport default ComposeSalad;\n\n{/* <select>\n{Object.keys(inventory).filter(x => inventory[x].foundation).map(x => \n<option key={x}>{x + ', ' + inventory[x].price + ' kr'}</option>)}\n</select> */}"]},"metadata":{},"sourceType":"module"}